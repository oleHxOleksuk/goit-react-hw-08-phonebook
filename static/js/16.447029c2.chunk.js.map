{"version":3,"file":"static/js/16.447029c2.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let time = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            time = holdTime;\n        }\n        else {\n            time = timestamp - startTime;\n        }\n        // Rebase on delay\n        time = Math.max(time - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            time = totalDuration;\n        }\n        let elapsed = time;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = time / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = time >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = time >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const finish = () => {\n        animationDriver && animationDriver.stop();\n        playState = \"finished\";\n        onComplete && onComplete();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(time);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            time = newTime;\n            if (holdTime !== null || !animationDriver) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime;\n            }\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = time;\n        },\n        stop: () => {\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n            animationDriver = undefined;\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        play: () => animation.play(),\n        pause: () => animation.pause(),\n        stop: () => {\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            time: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.5.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.5.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.5.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","requestAnimationFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","time","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","finish","play","then","reject","newTime","pause","sample","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","currentTime","setWithVelocity","createInstantAnimation","delayBy","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}